# makefile.am for resources

# uses gencmn to build the resource data
# gencmn can also make a C header, thus:
# gencmn --name oly_lang -t dat -S fortune_resources.c fortune_resources.txt 
datadir									= @datadir@
datarootdir							= @datarootdir@
localedir								= @localedir@

DEFS 										= @DEFS@ @DEV_DEF@ -DLOCALEDIR=\"$(localedir)\"

.PHONY									= clean-local-res

SUFFIXES								= .res 

# Resource shortname
RESNAME									=	@OLY_RESOURCE@

RESLIST									=	$(RESNAME).txt

DATFILE									= $(RESNAME).dat

RESDIR									=	$(top_srcdir)/resources

INDEX_NAME							= res_index

LANG_INDEX_FILE					=	$(INDEX_NAME).txt

LANG_INDEX_RES					=	$(INDEX_NAME).res

RESTEXT									= root.txt \
													en.txt \
													el.txt \
													ja.txt

RESFILES								= \
													root.res \
													en.res \
													$(LANG_INDEX_RES) \
													el.res \
													ja.res


RESLDFLAGS							= -L$(RESDIR) -l$(RESNAME)

PKGDATAOPTS							=	-v -d . --tempdir .deps -e $(RESNAME)

LINK.cc									= $(CC) $(CFLAGS) $(LDFLAGS)

GENRBOPT								= --bundle-name $(RESNAME)

pkgdata_DATA						=	$(DATFILE)


.txt.res:
	@echo "generating $@"
	$(GENRB) $(GENRBOPT) $^ -d $(RESDIR)

root.res: $(LANG_INDEX_FILE)
	@echo "generating $@"
	$(GENRB) $(GENRBOPT) -d $(RESDIR) $(RESTEXT) $(LANG_INDEX_FILE)

$(RESLIST): $(RESFILES) $(LANG_INDEX_FILE) 
	ls *.res > $@

# $(GENRB) $(GENRBOPT) $^ -d $(RESDIR) $(RESFILES)

# gencmn can generate a .dat file too using these commands
$(DATFILE): $(RESFILES) $(RESLIST)
	mkdir -p .deps
	$(PKGDATA) --name $(RESNAME) --mode common $(PKGDATAOPTS) $(RESLIST)

# lib$(RESNAME).a: $(RESFILES) $(RESLIST)
#	mkdir -p .deps
#	$(PKGDATA) --name $(RESNAME) --mode static $(PKGDATAOPTS) $(RESLIST)

#	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@ $(XTRALIBS)
# gencmn --name $(RESNAME) -t dat 0 $(RESLIST)

CLEANFILES							= $(RESFILES) \
													$(RESLIST) \
													$(RESTARGET) \
													$(RESNAME).dat \
													$(INDEX_NAME).res \
													$(LANG_INDEX_FILE) \
													$(RESNAME)_dat.s 

clean-local-res:
	rm -rf .deps

clean-local: clean-local-res

distclean-local: clean-local 

$(TARGET): $(OBJECTS)
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@ $(XTRALIBS)

INSTALLED_LANG_FILES = $(RESTEXT:%.txt=%)

RMV = @RMV@

$(LANG_INDEX_FILE): $(RESTEXT)
	@echo "generating $@ (list of installed language name locales)"; \
	$(RMV) $@; \
	echo "// Warning this file is automatically generated" > $@; \
	echo "$(INDEX_NAME):table(nofallback) {" >> $@; \
	echo "    InstalledLocales {" >> $@; \
	for file in $(INSTALLED_LANG_FILES); do \
	  echo "        $$file {\"\"}" >> $@; \
	done; \
	echo "    }" >> $@; \
	echo "}" >> $@;

